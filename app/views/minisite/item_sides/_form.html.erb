<%= form_for(@item_side, :url => minisite_item_side_path(@item_side), html: {multipart: true}) do |f| %>

    <%= render 'shared/error_messages', record: @item_side %>

    <div class='preview'>
      <h3><%= t'.title' %></h3>
      <table cellpadding='20px'>
        <tr>
          <td align='right'>
            <div id='portrait_item'>
              <!-- Constrain stock image to be 300px wide. Height varies according to part. This is done in the css. -->
              <%= image_tag @item_side.portrait.image_url(:face), id: 'cropbox' %>
            </div>
          </td>
          <td align="top">
            <!-- Constrain preview images to be 300px wide in this div. Height varies according to part. Can't do this bit in the css. -->
            <% orig_width = @item_side.part.width.to_f %>
            <% orig_height = @item_side.part.height.to_f %>
            <% dest_width = 300.0 %>
            <% dest_height = (dest_width * orig_height) / orig_width %>
            <div id='part_item_preview' style='width:300px; height:<%=dest_height%>px;'>
              <%= image_tag @item_side.part.image_part_url, id: 'part_template' %>
              <%= image_tag @item_side.portrait.image_url(:face), id: 'preview' %>
            </div>

          </td>
        </tr>
      </table>
    </div>

    <p>
      <%= t'.p1_html' %>
    </p>

    <div class="actions">
      <%= f.submit :id => 'my_submit', :value => 'Save' %>
      <% cancel_url = @offer.items.count > 1 ? minisite_offer_items_path(@offer) : minisite_offer_url(@offer) %>
      <%= link_to t(:cancel), cancel_url, :style => 'margin-left: 15px;' %>
      <span id="spinner" style="display:none"></span>
    </div>

    <div id="portrait_form">

    </div>

    <div class="portraits">
      <div><br/><br/><i><%= t'.portraits_click' %></i></div>
      <% @admin_customer_offer.portraits.each do |portrait| %>
          <div>
            <%= link_to cw_div_image_only(portrait), portrait_minisite_item_side_path(@item_side, portrait.id), :remote => true %>
          </div>
      <% end %>
    </div>

    <div id='hidden_fields'>
      <%= f.fields_for :portrait, @item_side.portrait do |p| %>
          <%= p.hidden_field :id, :value => @item_side.portrait.id %>
      <% end %>
      <% %w[x y w h].each do |attr| %>
          <%= f.hidden_field "crop_#{attr}" %>
      <% end %>
    </div>

    <!-- remove for now, think should go on different page
    <!-- upload a file for new portrait
    <div class="field">
       f.label :image_stock, 'Portrait:' %>
       f.file_field :image_stock %>
      <br/>
       f.label :remote_image_stock_url, 'or Portrait URL' %>
       f.text_field :remote_image_stock_url %>
    </div>
     f.hidden_field :image_stock_cache %>
    -->

<% end %>

<%= javascript_tag do %>
    // Pass dimensions of the piece template to javascript for PortraitCropper in portraits.js to pick up.
    window.portraitWidth     = <%= @item_side.portrait.width %>;
    window.portraitHeight    = <%= @item_side.portrait.height %>;
    window.partWidth         = <%= @item_side.part.width %>;
    window.viewportWidth   = <%= @item_side.part.part_layout.layout.w %>;
    window.viewportHeight  = <%= @item_side.part.part_layout.layout.h %>;
    window.viewportOffsetX = <%= @item_side.part.part_layout.layout.x %>;
    window.viewportOffsetY = <%= @item_side.part.part_layout.layout.y %>;

    // Create the jCrop object on the page when portrait has finished loading.
    $('#preview').imagesLoaded( wait(500, function(){new PortraitCropper()}) );

    // Show spinner when any portrait clicked.
    $('.portraits').click(function () {
    $('#spinner').toggle();
    });
<% end %>